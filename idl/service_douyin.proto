syntax = "proto3";

package idl;
option go_package = "github.com/sjxiang/douyin-backend/pb";  


import "google/api/annotations.proto";
import "rpc_comment_list.proto";
import "rpc_comment_action.proto";
import "rpc_favorite_action.proto";
import "rpc_favorite_list.proto";
import "rpc_relation_action.proto";
import "rpc_relation_follow_list.proto";
import "rpc_relation_follower_list.proto";
import "rpc_relation_friend_list.proto";
import "rpc_user_info.proto";
import "rpc_user_login.proto";
import "rpc_user_register.proto";
import "rpc_video_feed.proto";
import "rpc_video_publish_action.proto";
import "rpc_video_publish_list.proto";
import "rpc_message_action.proto";
import "rpc_message_chat.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "douyin backend";
        version: "1.0";
        contact: {
            name: "crud tech project";
            url: "https://github.com/sjxiang/douyin-backend";
            email: "1535484943@qq.com";
        };
    };
};

service Douyin {

    /*
        基础接口，也是核心 core

        抖音最基础的功能实现，支持所有用户刷抖音视频，同时允许用户注册账户，发布自己拍摄的视频，发布后能够被其他人刷到。

     */
    rpc UserRegister(DouyinUserRegisterRequest) returns(DouyinUserRegisterResponse) {
        option (google.api.http) = {
            post: "/douyin/user/register"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "新用户注册时，提供用户名、密码、昵称即可，用户名需要保证唯一。创建成功后，返回用户 id 和权限 token。";
            summary: "用户注册";
        };
    }
    
    rpc UserLogin(DouyinUserLoginRequest) returns(DouyinUserLoginResponse) {
        option (google.api.http) = {
            post: "/douyin/user/login"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "通过用户名和密码进行登录，登录成功后，返回用户 id 和权限 token。";
            summary: "用户登录";
        };
    }

    rpc UserInfo(DouyinUserInfoRequest) returns(DouyinUserInfoResponse) {
        option (google.api.http) = {
            get: "/douyin/user"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "获取登录用户 id、昵称，如果实现社交部分的功能，还会返回关注数、粉丝数等";
            summary: "用户信息";
        };
    }

    rpc PublishAction(DouyinPublishActionRequest) returns(DouyinPublishActionResponse) {
        option (google.api.http) = {
            post: "/douyin/publish/action"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户选择视频上传";
            summary: "视频投稿";
        };
    }
    
    rpc PublishList(DouyinPublishListRequest) returns(DouyinPublishListResponse) {
        option (google.api.http) = {
            get: "/douyin/publish/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户的视频发布列表，直接列出用户所有投稿过的视频";
            summary: "发布列表";
        };
    }

    rpc Feed(DouyinFeedRequest) returns(DouyinFeedResponse) {
        option (google.api.http) = {
            get: "/douyin/feed"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "不限制登录状态，返回按投稿时间倒序的视频列表，视频数由服务端控制，单次最多 30 个。";
            summary: "视频流";
        };
    }

    /*
        互动接口，extra.first

        每个登录用户支持点赞，同时维护用户自己的点赞视频列表，在个人信息页中查看。

        所有用户能够查看视频的评论列表，但只要登录用户能够对视频进行评论。

     */

    rpc FavoriteAction(DouyinFavoriteActionRequest) returns(DouyinFavoriteActionResponse) {
        option (google.api.http) = {
            post: "/douyin/favorite/action"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户对视频的点赞和取消点赞操作";
            summary: "赞操作";
        };
    }
  
    rpc FavoriteList(DouyinFavoriteListRequest) returns(DouyinFavoriteListResponse) {
        option (google.api.http) = {
            get: "/douyin/favorite/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户的所有点赞视频";
            summary: "喜欢操作";
        };
    }

    
    rpc CommentAction(DouyinCommentActionRequest) returns(DouyinCommentActionResponse) {
        option (google.api.http) = {
            post: "/douyin/comment/action"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户对视频进行评论";
            summary: "评论操作";
        };
    }
  
    rpc CommentList(DouyinCommentListRequest) returns(DouyinCommentListResponse) {
        option (google.api.http) = {
            get: "/douyin/comment/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "查看视频的所有评论，按发布时间倒序";
            summary: "视频评论列表";
        };
    }

    
    /*
    
        社交接口，extra.second

        实现用户之间的关注关系维护，登录用户能够关注或取关其他用户，同时自己能够看到自己关注过的所有用户列表，以及所有关注自己的用户列表。

     */
    rpc RelationAction(DouyinRelationActionRequest) returns(DouyinRelationActionResponse) {
        option (google.api.http) = {
            post: "/douyin/relation/action"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户对其他用户进行关注或者取消关注";
            summary: "关系操作";
        };
    }
    
    rpc RelationFollowList(DouyinRelationFollowListRequest) returns(DouyinRelationFollowListResponse) {
        option (google.api.http) = {
            get: "/douyin/relation/follow/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户关注的所有用户列表";
            summary: "用户关注列表";
        };
    }

    rpc RelationFollowerList(DouyinRelationFollowerListRequest) returns(DouyinRelationFollowerListResponse) {
        option (google.api.http) = {
            get: "/douyin/relation/follower/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "所有关注登录用户的粉丝列表";
            summary: "用户粉丝列表";
        };
    }

    rpc RelationFriendList(DouyinRelationFriendListRequest) returns(DouyinRelationFriendListResponse) {
        option (google.api.http) = {
            get: "/douyin/relation/friend/list"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "互相关注的用户列表";
            summary: "用户好友列表";
        };
    }

    /*
        聊天，extra.third

        客户端通过定时轮询服务端接口，查询消息记录
    
     */
    rpc MessageChat(DouyinMessageChatRequest) returns(DouyinMessageChatResponse) {
        option (google.api.http) = {
            get: "/douyin/message/chat"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "当前登录用户和其他指定用户的聊天消息记录";
            summary: "聊天记录";
        };
    }
  
    rpc MessageAction(DouyinMessageActionRequest) returns(DouyinMessageActionResponse) {
        option (google.api.http) = {
            post: "/douyin/message/action"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "登录用户对消息的相关操作，目前只支持消息发送";
            summary: "消息操作";
        };
    }
}
